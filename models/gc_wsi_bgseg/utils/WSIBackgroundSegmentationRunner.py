"""
------------------------------------------------------------------
Mhub / DIAG - Run Module for WSI Background Segmentation Algorithm
------------------------------------------------------------------

------------------------------------------------------------------
Author: Sil van de Leemput
Email:  sil.vandeleemput@radboudumc.nl
------------------------------------------------------------------
"""
import tempfile

from mhubio.core import Instance, InstanceData, IO, Module

from pathlib import Path


class WSIBackgroundSegmentationRunner(Module):

    CLI_SCRIPT_PATH = Path(__file__).parent.parent / "src" / "pathology-tissue-background-segmentation" / "process.py"

    @IO.Instance()
    @IO.Input('in_data', 'tif|tiff:mod=sm', the='input whole slide image Tiff')
    @IO.Output('out_data', 'gc_wsi_bg_segmentation.tif', 'tiff:mod=seg:model=WSIBackgroundSegmentation', 'in_data', the='Background segmentation of the input WSI.')
    def task(self, instance: Instance, in_data: InstanceData, out_data: InstanceData) -> None:
        with tempfile.TemporaryDirectory() as tmp_dir:
            # Execute the Tiger LB2 Algorithm through a Python subprocess and associated pipenv environment
            self.subprocess(
                [
                    "pipenv",
                    "run",
                    "python",
                    str(self.CLI_SCRIPT_PATH),
                    in_data.abspath,
                    out_data.abspath,
                    "--work-dir",
                    tmp_dir
                ]
            )

        # Validate that the required output was generated by the subprocess
        if not Path(out_data.abspath).is_file():
            raise FileNotFoundError(
                f"Couldn't find expected output file: `{out_data.abspath}`. "
                f"The subprocess `{self.CLI_SCRIPT_PATH}` did not generate the required output file."
            )
