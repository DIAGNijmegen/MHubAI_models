"""
---------------------------------------------------
Mhub / DIAG - CLI for the Node21 baseline Algorithm
  The model algorith was wrapped in a CLI to ensure
  the mhub framework is able to properly capture
  the stdout generated by the algorithm
---------------------------------------------------

---------------------------------------------------
Author: Sil van de Leemput
Email:  sil.vandeleemput@radboudumc.nl
---------------------------------------------------
"""

import argparse
from pathlib import Path
import json

import SimpleITK

# Import Node21 baseline nodule detection algorithm from the node21_detection_baseline repo
from process import Noduledetection


def run_classifier(input_cxr: Path, output_json_file: Path):
        # Read input image
        input_image = SimpleITK.ReadImage(str(input_cxr))

        # Run nodule detection algorithm on the input image and generate predictions
        tmp_path = Path("/app/tmp")
        predictions = Noduledetection(input_dir=tmp_path, output_dir=tmp_path).predict(input_image=input_image)

        # sort predictions on probability first (descending), corner positions second (ascending)
        # this was implemented because the old sorting only sorts on probability (descending) and can give different
        # results if two probabilities are the same
        predictions["boxes"] = list(
            sorted(
                predictions["boxes"],
                key=lambda x : tuple([-x["probability"]] + [tuple(c) for c in x["corners"]]),
                reverse=False
            )
        )

        # Export the predictions to a JSON file
        with open(output_json_file, "w") as f:
            json.dump(predictions, f, indent=4)


def run_classifier_cli():
    parser = argparse.ArgumentParser("CLI to run the Node21 baseline classifier")
    parser.add_argument("input_cxr", type=str, help="input CXR image (MHA)")
    parser.add_argument("output_json_file", type=str, help="Output nodule bounding boxes and probabilities predictions (JSON)")
    args = parser.parse_args()
    run_classifier(
        input_cxr=Path(args.input_cxr),
        output_json_file=Path(args.output_json_file)
    )


if __name__ == "__main__":
    run_classifier_cli()
